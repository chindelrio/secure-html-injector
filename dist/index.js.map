{"version":3,"file":"index.js","sources":["../src/html-injector/HtmlInjector.tsx"],"sourcesContent":["import React, { ReactNode, createElement, useCallback, useMemo, useRef } from 'react';\nimport DOMPurify from 'dompurify';\n\ninterface HtmlInjectorProps {\n  htmlString: string;\n}\nconst HtmlInjector = ({ htmlString }: HtmlInjectorProps) => {\n\n  const positionRef = useRef(0);\n\n  const formatStyles = useCallback((style: string) => {\n    const _toCamelCase = (str: string) =>\n      str.replace(/-([a-z])/g, (_, char) => char.toUpperCase())\n    const formattedStyles: Record<string, string> = {};\n    style.split(';').forEach((property) => {\n      const [rawKey, rawValue] = property.split(':');\n      if (!rawKey || !rawValue) return;\n      const key = _toCamelCase(rawKey.trim());\n      const value = rawValue.trim();\n      if (key && value) {\n        formattedStyles[key] = value;\n      }\n    });\n    return formattedStyles;\n  }, []);\n\n  const domNodeToReact = useCallback((node: ChildNode): ReactNode => {\n    if (node.nodeType === Node.TEXT_NODE) {\n      return node.textContent;\n    }\n    if (node.nodeType === Node.ELEMENT_NODE) {\n      const el = node as Element;\n      const children = Array.from(el.childNodes).map(domNodeToReact);\n      const props: Record<string, unknown> = {};\n      props.key = positionRef.current;\n      positionRef.current += 1;\n      for (const attr of Array.from(el.attributes)) {\n        if (attr.name === \"class\") {\n          props[\"className\"] = attr.value;\n        } else if (attr.name === \"style\") {\n          props[\"style\"] = formatStyles(attr.value);\n        } else if (/^on[a-z]/.test(attr.name)) {\n          continue;\n        } else {\n          props[attr.name] = attr.value;\n        }\n      }\n      return createElement(el.tagName.toLowerCase(), props, ...children);\n    }\n    return null;\n  }, [formatStyles]);\n\n  \n  const parseHtmlToReact = useCallback((stringToParse: string): ReactNode => {\n    const domParser = new DOMParser();\n    const doc = domParser.parseFromString(stringToParse, \"text/html\");\n    return Array.from(doc.body.childNodes).map(domNodeToReact);\n  }, [domNodeToReact]);\n\n  const sanitizedHtml = useMemo(() => {\n    const cleanedHtml = typeof htmlString === \"string\" ? htmlString.replace(/\\r?\\n|\\r/g, '').replace(/\\s+/g, ' ').trim() : htmlString;\n    if (typeof htmlString !== \"string\" || !htmlString.trim().startsWith('<') ) return \"\";\n    return DOMPurify.sanitize(cleanedHtml);\n  }, [htmlString]);\n\n  const parsedHtml = useMemo(() =>\n    sanitizedHtml.length > 0 ? parseHtmlToReact(sanitizedHtml) : null,\n    [sanitizedHtml, parseHtmlToReact]\n  );\n\n  return parsedHtml ? <div>{parsedHtml} </div> : null\n};\n\nexport default HtmlInjector;\n"],"names":["HtmlInjector","_ref","htmlString","positionRef","useRef","formatStyles","useCallback","style","_toCamelCase","str","replace","_","char","toUpperCase","formattedStyles","split","forEach","property","_property$split","rawKey","rawValue","key","trim","value","domNodeToReact","node","nodeType","Node","TEXT_NODE","textContent","ELEMENT_NODE","el","children","Array","from","childNodes","map","props","current","_i","_Array$from","attributes","length","attr","name","test","createElement","apply","tagName","toLowerCase","concat","parseHtmlToReact","stringToParse","domParser","DOMParser","doc","parseFromString","body","sanitizedHtml","useMemo","cleanedHtml","startsWith","DOMPurify","sanitize","parsedHtml","React"],"mappings":"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"}